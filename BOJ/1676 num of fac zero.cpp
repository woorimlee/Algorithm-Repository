#include <iostream>

using namespace std;

/* 0의 개수를 구한다고 하면
2*5가 하나 있으면 맨 끝에 0이 하나,
(2*5)*(2*5) 이렇게 있으면 맨 끝에 0이 두 개.
(+ 여기서 5의 개수가 2보다는 적으니까 5의 개수만 구해도 된다.)

10!에서
1	2	3	4	5
6	7	8	9	10
2의 개수를 구한다고 치면 모든 숫자에 2의 약수를 찾아보자.
0	1	0	1*2	0
1	0	1*4	0	1
2가 5개 + 다시 약수를 찾아보면
0	0	0	1	0
0	0	1*2	0	0
2가 2개 + 다시 약수를 찾아보면
0	0	0	0	0
0	0	1	0	0
2가 1개.
즉, 2의 약수는 총 5 + 2 + 1.
다시 생각해보면
10/2 + (10/2)/2 + ((10/2)/2)/2가 된다.

이걸 구현한 식이 아래의 while문이다.
*/

int N;

int main(void) {
	cin >> N;

	int answer = 0;

	//5의 약수만 구해도 된다.
	while (N >= 5) {
		answer += N / 5;
		N /= 5;
	}

	cout << answer;
	return 0;
}
