#include <iostream>

using namespace std;

int N;
int dp[1000001] = { 0 };

int main() {
	cin >> N;

	/*
	가능한 연산 세 개
	dp[x]에 들어가야 할 값은 최소 연산 횟수임.
	1을 뺀다는 항상 실행하는 애니까 dp[x]에 기본적으로 그 값을 채워 넣고,
	2의 배수인 경우와 3의 배수인 경우를 각각 비교해 최소 연산 횟수를 저장하자.
	*/
	
	//dp[1]부터 최소 연산 횟수 계산 시작.
	dp[1] = 0;
	for (int i = 2; i <= N; i++) {
		//연산 세 번째 것 적용.
		dp[i] = dp[i - 1] + 1;
		//연산 두 번째 것 적용.
		if (i % 2 == 0) {
			//dp[i]는 3번 연산을 적용한 연산 횟수 결과가 들어있는 상태인데,
			//2로 나눈 연산 횟수 + 1을 적용한 결과가 위의 경우보다 값이 작다면,
			//그 값으로 dp[i] 값을 갱신한다.
			dp[i] = ((dp[i / 2] + 1) < dp[i]) ? dp[i / 2] + 1 : dp[i];
		}
		//else if로 하면 안됨
		if (i % 3 == 0) {
			//위의 i%2==0과 같은 개념의 코드
			dp[i] = ((dp[i / 3] + 1) < dp[i]) ? dp[i / 3] + 1 : dp[i];
		}
	}

	cout << dp[N];
	return 0;
}